import{e as f}from"./decode-payload.3sgpGVdW.js";import{h as d}from"./has.BWrERxPV.js";import{s as c}from"./parse-with-big-int.BKSBwM2t.js";import{r as y,a as m}from"./route-for-api.BLVro8el.js";const p=t=>{const a=t.indexOf("["),n=t.indexOf("]");return t.slice(a+1,n).split(" ").filter(r=>r!=="__stack_trace").map(r=>r.endsWith(",")?{name:r.slice(0,r.length-1)}:{name:r})},l=async(t,a,n)=>(a=await a,{namespace:t,workflowId:a.id,queryType:n});async function _({workflow:t,namespace:a,queryType:n,queryArgs:r},o=fetch,i){t=await t;const e=await l(a,t,n),s=y("query",e);return await m(s,{options:{method:"POST",body:c({execution:{workflowId:t.id,runId:t.runId},query:{queryType:n,queryArgs:r}})},request:o,onError:i,notifyOnError:!1})}async function I(t,a,n){var r,o,i;try{const e=await u({...t,queryType:"__temporal_workflow_metadata"},a,n);return(o=(r=e==null?void 0:e.definition)==null?void 0:r.queryDefinitions)==null?void 0:o.filter(s=>(s==null?void 0:s.name)!=="__stack_trace")}catch(e){if((i=e.message)!=null&&i.includes("__temporal_workflow_metadata"))return p(e.message);throw e}}async function u(t,a,n,r=fetch){return _(t,r).then(async o=>{const{queryResult:i}=o??{queryResult:{payloads:[]}};let e=i.payloads;try{if(e[0]){const s=await f({attributes:i,namespace:t.namespace,settings:a,accessToken:n});d(s,"payloads")&&Array.isArray(s.payloads)&&(e=s.payloads[0])}return e}catch{return typeof e!="string"?c(e):e}})}async function T(t,a,n){return u({...t,queryType:"__stack_trace"},a,n)}export{I as a,u as b,T as g};
