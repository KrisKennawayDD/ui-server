import"./CWj6FrbW.js";import"./69_IOA4Y.js";import{p as et,s as n,m as h,R as f,l as E,ag as st,g as e,a as ot,f as at,e as rt,d as nt,r as T,b as ct}from"./BZ1i_Yzi.js";import{e as lt}from"./D5cC3u49.js";import{t as H,c as ut,a as q}from"./B11KKQxI.js";import{i as it}from"./Pfo2U1_a.js";import{e as ft}from"./DT_Kaee1.js";import{i as mt}from"./EXou6kTq.js";import{p as pt}from"./DQFlnzBt.js";import{e as F,a as m,s as dt,b as wt}from"./nHCSEYHe.js";import{a as vt}from"./Dm8LSs3h.js";import{p as ht}from"./C_BNG6hb.js";import{S as kt}from"./DLRGkYcE.js";import{w as C,q as yt,r as gt,b as G,d as _t}from"./C1AUxuGc.js";import{w as D}from"./JGWkO2yK.js";import{c as xt}from"./aSfmkhKo.js";import{S as St}from"./S6Q2Q0ub.js";import{w as K,t as Ct,c as It}from"./DpNIHMpF.js";import{b as Wt}from"./BCsfzXE6.js";import{u as bt}from"./DipyN8eJ.js";import{W as $t}from"./ASPrLBMs.js";const N=(u=[])=>u.map(o=>{const s=Wt(o==null?void 0:o.groupValues[0]),k=parseInt(o.count);return{status:s,count:k}}).sort((o,s)=>K.indexOf(o.status)-K.indexOf(s.status)),Y=(u,o,s)=>{const p=Math.pow(3600/u,1/s),y=u*Math.pow(p,o);return Math.min(3600,Math.round(y))};var Et=H("<button><!></button>"),qt=H('<div class="flex min-h-[24px] flex-wrap items-center gap-2"></div>');function Xt(u,o){et(o,!1);const[s,k]=dt(),p=()=>m(ht,"$page",s),y=()=>m(yt,"$queryWithParentWorkflowId",s),r=()=>m(C,"$workflowCount",s),L=()=>m(_t,"$disableWorkflowCountsRefresh",s),I=()=>m(D,"$workflowFilters",s),P=()=>m(gt,"$refresh",s),d=h(),w=h();let R=pt(o,"staticQuery",8,""),B=h([]),g=h([]),_,v=1,x=h(!1);const Q=5,W=100;vt(()=>{A()});const U=()=>{if(v+=1,clearInterval(_),v<=W){const t=Y(Q,v,W)*1e3;_=setInterval(()=>M(),t)}},A=()=>{clearInterval(_),n(g,[]),F(C,f(r).newCount=0,f(r)),v=1,n(x,!0)},M=async()=>{U();try{const{count:t,groups:a}=await G({namespace:e(d),query:e(w)});F(C,f(r).newCount=parseInt(t)-r().count,f(r)),n(g,N(a))}catch(t){console.error("Fetching workflow counts failed: ",t==null?void 0:t.message)}finally{n(x,!1)}},V=async()=>{if(A(),!L()){const t=Y(Q,v,W)*1e3;_=setInterval(()=>M(),t)}try{const{count:t,groups:a}=await G({namespace:e(d),query:e(w)});F(C,f(r).count=parseInt(t),f(r)),n(B,N(a))}catch(t){console.error("Fetching workflow counts failed: ",t==null?void 0:t.message)}finally{n(x,!1)}},j=t=>{if(!I().some(c=>c.attribute==="ExecutionStatus"&&c.value===t)){const c={attribute:"ExecutionStatus",type:St.KEYWORD,value:t,operator:"",conditional:"=",parenthesis:""};wt(D,[...I(),c]);const l=Ct(It(I()));bt({url:p().url,parameter:"query",value:l,clearParameters:[xt]})}};E(()=>p(),()=>{n(d,p().params.namespace)}),E(()=>(st(R()),y()),()=>{n(w,R()||y())}),E(()=>(e(w),e(d),P()),()=>{e(w),e(d),P(),V()}),ot(),mt();var b=qt();ft(b,5,()=>e(B),({count:t,status:a})=>a,(t,a)=>{let c=()=>e(a).count,l=()=>e(a).status;var O=ut(),z=at(O);{var J=i=>{var S=Et(),Z=rt(S);const tt=nt(()=>e(g).find($=>$.status===l())?e(g).find($=>$.status===l()).count-c():0);$t(Z,{get status(){return l()},get count(){return c()},get newCount(){return e(tt)},get"test-id"(){return`workflow-status-${l()??""}`}}),T(S),lt("click",S,()=>j(l())),q(i,S)},X=i=>{kt(i,{class:"h-6 w-24 rounded-sm"})};it(z,i=>{e(x)?i(X,!1):i(J)})}q(t,O)}),T(b),q(u,b),ct(),k()}export{Xt as W};
