import{t as l}from"./translate.BBe5dcco.js";import{r as h,a as f}from"./route-for-api.U-1yuDbl.js";const p=e=>(e!=null&&e.majorVersionSets?[...e.majorVersionSets]:[]).reverse(),y=e=>{if(!(!e||!e.length))return e[e.length-1]},k=e=>e?e.slice(0,e.length-1).reverse():[],C=e=>{var n;const t=p(e);if(!t.length)return;const s=(n=t[0])==null?void 0:n.buildIds;if(s!=null&&s.length)return y(t[0].buildIds)},A=e=>{var t,s;if(e!=null&&e.assignedBuildId)return e.assignedBuildId;if((t=e==null?void 0:e.mostRecentWorkerVersionStamp)!=null&&t.useVersioning)return((s=e.mostRecentWorkerVersionStamp)==null?void 0:s.buildId)||void 0},T=e=>{var t,s;if((t=e==null?void 0:e.workerVersionCapabilities)!=null&&t.useVersioning)return((s=e.workerVersionCapabilities)==null?void 0:s.buildId)||void 0},F=e=>[...new Set(e==null?void 0:e.map(T).filter(Boolean))],W=e=>e==null?void 0:e.some(t=>{var s;return(s=t==null?void 0:t.workerVersionCapabilities)==null?void 0:s.useVersioning});async function B(e,t=fetch){var a;const s=h("task-queue",e),n=await f(s,{request:t,params:{taskQueueType:"1"}}),u=await f(s,{request:t,params:{taskQueueType:"2"}});n!=null&&n.pollers||(n.pollers=[]),u!=null&&u.pollers||(u.pollers=[]),u.pollers.forEach(r=>{r.taskQueueTypes=["ACTIVITY"]}),n.pollers.forEach(r=>{r.taskQueueTypes=["WORKFLOW"]});const o=r=>(d,g)=>{const m=d[g.identity]||{lastAccessTime:void 0,taskQueueTypes:[]};return d[g.identity]={lastAccessTime:!m.lastAccessTime||m.lastAccessTime<g.lastAccessTime?g.lastAccessTime:m.lastAccessTime,taskQueueTypes:m.taskQueueTypes.concat([r])},d};u.pollers.filter(r=>n.pollers.some(d=>{if(r.identity===d.identity)return r.taskQueueTypes=[...d.taskQueueTypes,...r.taskQueueTypes],r})),(a=u.pollers)==null||a.reduce(o("ACTIVITY"),n.pollers.reduce(o("WORKFLOW"),{}));const i=u.pollers.length?u.pollers:n.pollers,c=u.pollers.length?u.taskQueueStatus:n.taskQueueStatus;return{pollers:i,taskQueueStatus:c}}async function E(e,t=fetch){const s=await I(e,t),n=await Q(e,t),u=p(n);return{rules:s,compatibility:n,versionSets:u}}async function I(e,t=fetch){const s=h("task-queue.rules",e);return f(s,{request:t,handleError:n=>{}})}async function Q(e,t=fetch){const s=h("task-queue.compatibility",e);return f(s,{request:t,handleError:n=>{}})}async function O(e,t=fetch){const{namespace:s,buildIds:n,queue:u}=e,o=h("worker-task-reachability",{namespace:s}),i=new URLSearchParams;if(n.length)for(const c of n)i.append("buildIds",c);else i.append("buildIds",""),i.append("taskQueues",u);return await f(o,{request:t,params:i,handleError:c=>({buildIdReachability:[]})})}function V(e){return!e||!e.length?l("workers.ready-to-be-retired"):e.length===1&&e.includes("CLOSED")?l("common.maybe"):l("common.no")}function R(e,t,s){var i,c;const n=(i=e==null?void 0:e.buildIdReachability)==null?void 0:i.find(a=>a.buildId===s);if(!n)return"";const u=(c=n==null?void 0:n.taskQueueReachability)==null?void 0:c.find(a=>(a==null?void 0:a.taskQueue)===t);if(!u)return"";const o=u==null?void 0:u.reachability;return V(o)}export{p as a,C as b,T as c,R as d,y as e,k as f,B as g,E as h,F as i,O as j,A as k,W as p};
