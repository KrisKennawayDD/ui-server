import{t as f}from"./translate.BBe5dcco.js";import{e as d}from"./decode-payload.C4shLYd8.js";import{h as y}from"./has.BnvKvYqj.js";import{s as c}from"./parse-with-big-int.DJQKqIvA.js";import{r as l,a as m}from"./route-for-api.BxqWpWwS.js";const p=t=>{const e=t.indexOf("["),r=t.indexOf("]");return t.slice(e+1,r).split(" ").filter(a=>a!=="__stack_trace").map(a=>a.endsWith(",")?{name:a.slice(0,a.length-1)}:{name:a})},_=async(t,e,r)=>(e=await e,{namespace:t,workflowId:e.id,queryType:r});async function h({workflow:t,namespace:e,queryType:r,queryArgs:a},i){t=await t;const n=await _(e,t,r),s=l("query",n);return await m(s,{options:{method:"POST",body:c({execution:{workflowId:t.id,runId:t.runId},query:{queryType:r,queryArgs:a}}),signal:i},request:fetch,notifyOnError:!1})}async function x(t,e,r,a){var i;try{const n=await u({...t,queryType:"__temporal_workflow_metadata"},e,r,a);return n.currentDetails||(n.currentDetails=f("workflows.no-current-details")),n}catch(n){return(i=n.message)!=null&&i.includes("__temporal_workflow_metadata")?{definition:{queryDefinitions:p(n.message)}}:{error:n}}}async function u(t,e,r,a){return h(t,a).then(async i=>{const{queryResult:n}=i??{queryResult:{payloads:[]}};let s=n.payloads;try{if(s[0]){const o=await d({attributes:n,namespace:t.namespace,settings:e,accessToken:r});y(o,"payloads")&&Array.isArray(o.payloads)&&(s=o.payloads[0])}return s}catch{return typeof s!="string"?c(s):s}})}async function I(t,e,r){return u({...t,queryType:"__stack_trace"},e,r)}export{x as a,u as b,I as g};
