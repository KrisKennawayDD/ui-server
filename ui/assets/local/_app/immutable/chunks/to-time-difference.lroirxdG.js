import{C as u}from"./scheduler.D6mQsyhd.js";import{t as n}from"./translate.BBe5dcco.js";import{f as d,r as p,t as b}from"./time-format.kc9DLOlw.js";import{c as f}from"./format-camel-case.ByTIZu23.js";import{s as l,a as h,p as c,b as y,c as w}from"./get-single-attribute-for-event.CTvaV2us.js";const D=new Set(["taskQueue","retryPolicy","parentWorkflowExecution","workflowExecution","meta"]),A=new Set(["maximumAttempts"]),g=(e,t)=>e===0?n("workflows.no-expiration"):t,v=(e,t)=>e?e-t:n("workflows.unlimited"),$=e=>e||n("workflows.unlimited"),x=(e,t)=>e==="maximumAttempts"&&!t?n("workflows.unlimited"):t,a=(e,t)=>{if(D.has(t)&&typeof e[t]=="object"){for(const[s,r]of Object.entries(e[t]))y(r)&&(A.has(s)?e[`${t}${f(s)}`]=x(s,r):e[`${t}${f(s)}`]=r);delete e[t]}},F=e=>{const t={};if(e.attributes)for(const[s,r]of Object.entries(e.attributes))l(s,r)&&(t[s]=r),a(t,s);return t},S=e=>{const t={};return e.eventList.forEach(s=>{for(const[r,o]of Object.entries(s.attributes))l(r,o)&&(t[r]=o),a(t,r)}),Object.keys(t).forEach(s=>{h(s,t[s])||delete t[s]}),t},T=e=>{const t={},s=Object.entries(e).sort(([r],[o])=>c.indexOf(r)-c.indexOf(o));for(const[r,o]of s){const i=w(r),m=r.toLowerCase().includes("time")?d(String(o),u(b),{relative:u(p)}):o;i&&(t[r]=m),a(t,r)}return t},L=({date:e,now:t=Date.now(),negativeDefault:s})=>{if(!e)return"";const r=String(e);try{const i=(Number(new Date(r))-t)/1e3;return s&&i<0?s:isNaN(i)?"":`${i.toFixed(0)}s`}catch{return""}};export{$ as a,g as b,S as c,T as d,F as e,v as f,L as t};
